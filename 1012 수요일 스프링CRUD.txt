1012 수요일
<출석체크>
열차지연 09:18 문호준, 박근태, 오세영(늦게), 차형주
인터넷지연

<공지사항>
p.33 프로젝트의 구조


<학습목표>
- CREATE
- READ
- UPDATE
- DELETE

- 6교시 : 자습(복습, 못따라온거)
- 매퍼인터페이스와 서비스인터페이스와 거의완전히 똑같은데 구조의 흐름에 따라서 갈려고 쓰는건가요?
  나눠놓은 이유가 뭔가요?
  => 

<큰그림>
1. 화면에서 form 또는 자바스크립트로 get/post요청을 보냄.
2. Controller에서 Get/Post요청을 받아서 함수 실행
3. 컨트롤러의 함수에서는 서비스 인터페이스의 함수 호출
4. 서비스임플리먼트(구현체)의 함수가 실행.   매퍼인터페이스 함수 호출
5. 매퍼인터페이스는 xml의 쿼리 호출
6. db실행되고 결과를 5번에 반환, 4, 3, 2, 1 로 계속 반환되어서
7. 컨트롤러가 화면을 반환.    담을 데이터가 있으면 Model객체에 addAttribute로 넣어주기.


<프레임워크>
자바쪽 : Spring, Spring Boot
프론트엔드3대장 : React, Vue, Angular
파이썬 : Django, Flask
javascipt 모르고도 jqeury 쓸수있지만 근간을 알아야한다.

<bno>
q. bno를 order by 하면 리스트에서 순서대로 보이긴 하는데
삭제를 해버리면 그게 비워진상태로 보일건데 땡겨올수있나요?
a. 깔끔하게 정렬해서 보여주고싶다 => ROWNUM이라는 오라클의 가상컬럼을 써서 깔끔하게 표현
  삭제된 번호를 그대로 보여주고싶다. => 현재 그대로
  jstl을 활용하여 인조번호 부여
	<c:forEach items="${list}" var="list" varStatus="status">
		<tr>
			<td><c:out value="${status.index+1}"/></td>
