0930 금요일
<출석체크>
09:13 문호준, 박근태, 박세웅(오후)

<공지사항>


<학습목표>
깃(리모트. 깃헙)
	1. 깃헙에 깃프로젝트 올리고 받기
		//깃헙은 호스팅 사이트일 뿐 = 호스팅 = 컴퓨터를 빌려주는 일
		1. 깃헙 아이디가 있어야됨
		2. 리모트 리파지터리가 있어야됨
		//깃헙에 로그인을 통과했다는 정보를 소스트리에 알려줘야된다.
		//깃헙 오른쪽위 아바타 / settings / Developer settings / Personal access tokens
		generate new tokens / 비밀번호치기 / 
		다츠케하고 Generate token을 하면 하나의 이상한 문자열을 보여줍니다.
		그거 복사해서 안전한곳에 저장.
		리드미파일, 깃이그노어 파일 넣으려면 넣고
		초록색 Code버튼 클릭해서 주소 복사
		
		
		3. 원격을 clone해서 로컬 리파지터리로 받는건 아니까 수업안함
		4. 로컬을 리모트로 올리는법.
		
		- 비어있는 리모트 만들고, 클론받은다음, 다시 푸쉬
		- 이미 있는 로컬(이미 커밋 10개이상), 비어있는 리모트 만들고, 주소복사
		public : 깃헙주소만 알면 누구나 소스를 볼수있다.
				//누구나 clone은 할 수 있음.
				//누구나 push할수있는 권한이 있는건 아니다.
				//만든사람이 Settings / Collaboratos 에 깃헙아이디 추가
				//깃헙회원가입할때 넣었던 이메일로 초대가 와있는데 거기서 승낙
		
	2. STS랑 깃이랑 연결
	
		si현업에서는 주로 sts와 svn을 연동
			commit을 하면 바로 원격 서버에 push가 된다.
			나만의 공간이 없다.
		서비스 현업에서는 주로 소스트리와 git을 연동
			git은 내꺼는 local,   서버는 remote
			commit을 잘못해도, push를 안하면 remote는 정상
	
	
	1. 이미 만들어져있는 자바 프로젝트 하나를 리모트에 올려보세요.
		1.1 자바프로젝트가 존재.
		1.2 걔를 로컬 리포지토리와 연결.
		1.3 리모트 리파티가 존재
		1.4 로컬은 리모트와 연결
		1.5 푸쉬
	
	2. 한명이 만든 프로젝트에 다른사람을 초대해서 
		클론하면 이미 리모트 정보가 포함되어 있기때문에 설정 안힘들다.
		정상적인 협업.

		비정상적인 협업.
		충돌 해결
		
	fetch = 리모트의 소스를 로컬로 다운받는다.
	pull = fetch + merge.   다운받은 소스를 로컬소스와 병합한다.
		누구는 처음에는 쉬운GUI로 해야한다.
		누구는 처음부터 명령어로 해야한다. 말이 다름.
		GUI로 잘하면, 그때 명령어로는 실제로 어떻게 작동되고 있나 공부
		GUI로는 할수없는 복잡한 명령이 있다면 그때 명령어로.
	깃쓰려고 하면 지옥을 경험한다.
	하지만 깃이 없다면?   헬이다.
	
서블릿 
JSP 
	> Java Server Pages
		<5교시 첫페이지 띄우기>
	- 프로젝트생성 : new - dynamic web project - 다음, 다음, web.xml만들기 체크하고 finish
	- 웹서버 : tomcat 9.xx 다운
		index.jsp 만들고, 제일위에 자카르타 httpServlet에러가 떠서 자바빌드패스에 tomcap9경로 추가
		project- clean 해서 에러 없어진거 확인
		window - web browser - chrome으로 변경
		프로젝트 우클릭 - Run as  - Run on Server
		index.jsp가 열리는데 그것은 web.xml안에 있는 	<welcome-file-list>
		에서 처음으로 띄울 페이지를 설정해줬기 때문
	
		<6교시 기본문법과 데이터 주고받기>
			<그전에 jsp프로젝트 관리할 깃 생성>
			1. 깃헙로그인. new repository해서 새로운 remote repository 생성
			2. STS에서 git Perspective로 가서 clone해서 local repository 생성	  
			3. 프로젝트-team-share project로  2번에서 만든 로컬리파지토리 선택
			5. 푸쉬
	
		<앞으로 jsp소스 올리는 깃헙>
		https://github.com/ggoomter/KDT3_JSP
		수업때마다 같이 코딩하고 안될때마다 질문할건데,
		일일기준으로 완성본을 export 해서 주면 쪼개지는단위가 '일'이기 때문에
		단위를 더 작은 기능별로.
	
		<STS 빨라지는법>
		1. 오토 빌드 해제    //project탭 - build automatically 해제
		2. 스펠링체크 해제	//preferences / Spelling 검색.  체크해제
		3. STS.ini 파일	// -Xms자기메모리의1/8m  
						// -Xmx자기메모리의1/4m